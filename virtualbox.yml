---
- name: Setup VirtualBox
  hosts: virtualbox
  become: true

  vars:
    virtualbox_host: "{{groups['virtualbox'][0]}}:{{virtualbox_port}}"

  tasks:
    - name: Install build-essential and dkms (prepare)
      apt:
        name:
          - build-essential
          - dkms
          - unzip
        state: present
        update_cache: yes

    - name: Add VirtualBox repo keys
      apt_key:
        url: "https://www.virtualbox.org/download/{{ item }}.asc"
        state: present
      with_items:
        - oracle_vbox
        - oracle_vbox_2016

    - name: Add VirtualBox repo
      apt_repository:
        repo: 'deb {{ virtualbox_repo_base_url }}/debian {{ ansible_distribution_release }} contrib'
        state: present
        update_cache: yes

    - name: "Install virtualbox in version {{ virtualbox_version }}"
      apt:
        name: virtualbox-{{ virtualbox_version }}
        state: present

    - name: Check if extension pack is already installed
      shell: "VBoxManage list extpacks"
      register: extpack_list
      changed_when: false

    - name: Download VirtualBox extension pack
      get_url:
        url: "{{ virtualbox_repo_base_url }}/{{ virtualbox_extpack_version }}/Oracle_VM_VirtualBox_Extension_Pack-{{ virtualbox_extpack_version }}.vbox-extpack"
        dest: /tmp/
        force: yes
      register: download_result
      when: 'extpack_list.stdout == "Extension Packs: 0"'

    - name: Install VirtualBox extension pack
      shell: "echo 'y' | VBoxManage extpack install --replace {{ download_result.dest }}"
      when: 'extpack_list.stdout == "Extension Packs: 0"'

    - name: Add user to run virtualbox deamon
      user:
        name: "{{ virtualbox_user }}"
        createhome: yes
        shell: '/bin/bash'
        state: present
        append: yes # append groups
        groups: vboxusers
        update_password: on_create # only touch PW on user creation
        password: "{{ virtualbox_password|password_hash('sha512') }}"

    - name: Configure vboxweb deamon user
      template:
        src: virtualbox/virtualbox.j2
        dest: /etc/default/virtualbox

    - name: "Enable vboxweb deamon on start-up (Note: Sometimes the service starts to early and cannot bind to its port. Restart the service if necessary.)"
      service:
        name: vboxweb-service
        enabled: yes

# Set up phpVirtualBox
    - name: Create phpvirtualbox config dir
      file:
        path: "{{php_virtualbox_config_dir}}"
        state: directory
        mode: '0600'

    - name: Create phpVirtualBox compose file
      template:
        src: virtualbox/phpvirtualbox/docker-compose.yml.j2
        dest: "{{php_virtualbox_config_dir}}/docker-compose.yml"
        mode: '0600'

    - name: Start phpVirtualBox docker container
      docker_compose:
        project_src: "{{php_virtualbox_config_dir}}"

# Set up VM autostart via services
    - name: Create service config file
      template:
        src: virtualbox/vm_autostart.service.j2
        dest: "/etc/systemd/system/vm_{{item}}.service"
      loop: "{{autostart_virtual_machines}}"

# Set up VM backups
    - name: Create vm-backups subdir in backup mount point
      file:
        path: "{{virtualbox_vm_backup_mount_point}}/vm-backups"
        state: directory
        mode: '0755'
        owner: "{{virtualbox_user}}"
        group: "{{virtualbox_user_group}}"

    - name: Create backup scripts directory
      file:
        path: "{{virtualbox_vm_backup_script_dir}}"
        state: directory
        mode: '0755'

    - name: Save backup scripts
      template:
        src: virtualbox/vm-backup.sh.j2    
        dest: "{{virtualbox_vm_backup_script_dir}}/backup-{{item.vm_name}}.sh"
        mode: '0755'
      loop: "{{backup_vms}}"

    - name: Set up cron jobs
      cron:
        name: "Backup VM {{item.vm_name}}"
        minute: "{{item.cron_min}}"
        hour: "{{item.cron_hour}}"
        job: "{{virtualbox_vm_backup_script_dir}}/backup-{{item.vm_name}}.sh"
        user: "{{virtualbox_user}}"
      loop: "{{backup_vms}}"

    - name: Add MAILTO entry to crontab
      cron:
        name: MAILTO
        env: yes
        job: "{{smtp.sender}}"
        user: virtualbox